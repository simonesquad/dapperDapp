"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Streams = void 0;
var api_utils_1 = require("@moralisweb3/api-utils");
var common_core_1 = require("@moralisweb3/common-core");
var create_1 = require("./methods/create");
var update_1 = require("./methods/update");
var delete_1 = require("./methods/delete");
var getAll_1 = require("./methods/getAll");
var verifySignature_1 = require("./methods/verifySignature");
var addAddress_1 = require("./methods/addAddress");
var updateStatus_1 = require("./methods/updateStatus");
var logParser_1 = require("./methods/logParser");
var getAddresses_1 = require("./methods/getAddresses");
var deleteAddress_1 = require("./methods/deleteAddress");
var getById_1 = require("./methods/getById");
var common_streams_utils_1 = require("@moralisweb3/common-streams-utils");
var BASE_URL = 'https://api.moralis-streams.com';
var Streams = /** @class */ (function () {
    function Streams(core) {
        var _this = this;
        this.core = core;
        this.name = 'streams';
        this.type = common_core_1.ModuleType.API;
        this.baseUrl = BASE_URL;
        this.add = (0, create_1.makeCreateStream)(this.core, BASE_URL);
        this.update = (0, update_1.makeUpdateStream)(this.core, BASE_URL);
        this.delete = (0, delete_1.makeDeleteStream)(this.core, BASE_URL);
        this.getAll = (0, getAll_1.makeGetStreams)(this.core, BASE_URL);
        this.getById = (0, getById_1.makeGetStreamById)(this.core, BASE_URL);
        this.updateStatus = (0, updateStatus_1.makeUpdateStreamStatus)(this.core, BASE_URL);
        this.addAddress = (0, addAddress_1.makeAddAddress)(this.core, BASE_URL);
        this.getAddresses = (0, getAddresses_1.makeGetAddresses)(this.core, BASE_URL);
        this.deleteAddress = (0, deleteAddress_1.makeDeleteAddress)(this.core, BASE_URL);
        this.getHistory = this.createPaginatedFetcher(common_streams_utils_1.getHistoryOperation);
        this.retry = this.createFetcher(common_streams_utils_1.replayHistoryOperation);
        this._getStats = this.createFetcher(common_streams_utils_1.getStatsOperation);
        this.getStats = function () { return _this._getStats({}); };
        this.getStatsById = this.createFetcher(common_streams_utils_1.getStatsByIdOperation);
        this.setSettings = this.createFetcher(common_streams_utils_1.setSettingsOperation);
        this._readSettings = this.createFetcher(common_streams_utils_1.getSettingsOperation);
        this.readSettings = function () { return _this._readSettings({}); };
        this.verifySignature = function (options) { return (0, verifySignature_1.makeVerifySignature)(_this.core)(options); };
        this.parsedLogs = function (webhookData) { return (0, logParser_1.parseLog)(webhookData); };
    }
    Streams.create = function (core) {
        return new Streams(core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault());
    };
    Streams.prototype.setup = function () {
        // Nothing
    };
    Streams.prototype.start = function () {
        // Nothing
    };
    Streams.prototype.createFetcher = function (operation) {
        return new api_utils_1.OperationResolver(operation, BASE_URL, this.core).fetch;
    };
    Streams.prototype.createPaginatedFetcher = function (operation) {
        return new api_utils_1.PaginatedOperationResolver(operation, BASE_URL, this.core).fetch;
    };
    return Streams;
}());
exports.Streams = Streams;
//# sourceMappingURL=Streams.js.map