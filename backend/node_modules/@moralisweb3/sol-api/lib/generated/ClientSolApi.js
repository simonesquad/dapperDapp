"use strict";
// CAUTION: This file is automatically generated. Do not edit it manually!
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientSolApi = void 0;
var common_sol_utils_1 = require("@moralisweb3/common-sol-utils");
var api_utils_1 = require("@moralisweb3/api-utils");
var common_core_1 = require("@moralisweb3/common-core");
var ClientSolApi = /** @class */ (function () {
    function ClientSolApi() {
        var _this = this;
        this.type = common_core_1.ModuleType.API;
        this.account = {
            getBalance: function (request) {
                return new api_utils_1.OperationResolver(common_sol_utils_1.getBalanceOperation, _this.baseUrl, _this.core).fetch(request);
            },
            getNFTs: function (request) {
                return new api_utils_1.OperationResolver(common_sol_utils_1.getNFTsOperation, _this.baseUrl, _this.core).fetch(request);
            },
            getPortfolio: function (request) {
                return new api_utils_1.OperationResolver(common_sol_utils_1.getPortfolioOperation, _this.baseUrl, _this.core).fetch(request);
            },
            getSPL: function (request) {
                return new api_utils_1.OperationResolver(common_sol_utils_1.getSPLOperation, _this.baseUrl, _this.core).fetch(request);
            },
        };
        this.nft = {
            getNFTMetadata: function (request) {
                return new api_utils_1.OperationResolver(common_sol_utils_1.getNFTMetadataOperation, _this.baseUrl, _this.core).fetch(request);
            },
        };
        this.token = {
            getTokenPrice: function (request) {
                return new api_utils_1.OperationResolver(common_sol_utils_1.getTokenPriceOperation, _this.baseUrl, _this.core).fetch(request);
            },
        };
    }
    return ClientSolApi;
}());
exports.ClientSolApi = ClientSolApi;
//# sourceMappingURL=ClientSolApi.js.map